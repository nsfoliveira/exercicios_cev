# Estatística Básica

# Parte 5 - Graficos

# Definindo a pasta de trabalho

# Substitua o caminho abaixo pela pasta do computador, invertendo as barras
setwd("C:/Users/nsfol/Desktop/cursos/DSA/PowerBI_1/Parte 3/Mod12")
getwd()

#Dados
vetor_total_result = c(3, 12, 5, 18, 45)
names(vetor_total_result) = c("A", "B", "C", "D", "E")
View(vetor_total_result)

#BARPLOT = GRÁFICO DE BARRAS
?barplot
barplot(vetor_total_result)
barplot(vetor_total_result, col = c(1,2,3,4,5))

#salvando o gráfico em disco
png("barplot.png", width = 480, height = 480) #estou criando um arquivo na minha pasta de traballho vazio, mas com as dimensões definidas
barplot(vetor_total_result,
        col = rgb(0.3, 0.4, 0.5, 0.6),
        xlab = "Categoria",#rotulo do eixo x
        ylab = "Valores",#rotumo do eixo l
        main = "Barplot em R", #título do gráfico
        ylim = c(0,60))#limite do gráfico
dev.off()#salvando em disco

#Ggplot2
library(ggplot2)
View(mtcars) #dataset que ja´vem no rstudo

#Barplot
ggplot(mtcars, aes(x = as.factor(cyl)))+ #nesse caso ggplot sem o dois é uma função - essa é a primeira camada do gráfico, que são os dados
  geom_bar()#segunda camada do grafico que é ele propriamente dito

ggplot(mtcars, aes(x =  as.factor(cyl), fill = as.factor(cyl)))+
  geom_bar() + 
scale_fill_manual(values = c("darkgrey", "purple", "darkblue"))

?aes

#criando dados dummy (fictions)
dados = data.frame(group = c("A","B","C","D","E"), value = c(33, 28,62,56,67))
View(dados)

#Barplot
ggplot(dados, aes(x = group, y = value, fill = group)) +
  geom_bar(width = 0.85, stat = "identity")

#Pie chart = gráfico de pizza
fatias <- c(4,12, 16, 28,30)
paises <- c("Brasil", "Canada", "Alemanha","Nigéria", "Rússia")
pie(fatias, labels = paises, main = "Leitura de livros por Pessoas/Ano")

#Outro pacote de gráficos
install.packages("plotrix")
library(plotrix)

#Line Chart
# Dados
carros <- c(1, 3, 6, 4, 9)
caminhoes <- c(2, 5, 4, 5, 12)

# Plot
plot(carros, type = "o", col = "blue", ylim = c(0,12))#gráfico criado na área de plotagem

lines(caminhoes, type = "o", pch = 22, lty = 2, col = "grey")#adicioando uma linha sobre o grafico para outra variável

title(main = "Produção de Veículos", col.main = "black", font.main = 4)
  
#Boxplot = é para análise univariada, para cada variavel e podemos ver um reusmo estatístico de cada uma
library(ggplot2)
View(mpg)

# Plot
ggplot(mpg, aes(x = reorder(class, hwy), y = hwy, fill = class)) + #primeira camada, a de dados
  geom_boxplot() + #segunda camada, o bloxplot
  xlab("class") +#terceira camada, rotulo
  theme(legend.position = "none")#quarta camada é o tema do gráfico
  
#Scatter plot = Gráfico de dispersão -  para análise bivariada
data = data.frame(cond = rep(c("condition_1", "condition_2"), each=10), 
                  my_x = 1:100 + rnorm(100,sd=9), my_y = 1:100 + rnorm(100,sd=16))

View(data)

ggplot(data, aes(x=my_x, y=my_y)) + 
  geom_point(shape=1)

# Adiciona linha de regressão
ggplot(data, aes(x=my_x, y=my_y)) +    
  geom_point(shape=1) +  
  geom_smooth(method = lm , color="red", se=FALSE) 

# Adiciona smooth intervalo de confiança
ggplot(data, aes(x=my_x, y=my_y)) +    
  geom_point(shape=1) +  
  geom_smooth(method=lm , color="red", se=TRUE)  

#Treemap - 
install.packages("treemap")
library(treemap)

# Dados
grupo = c(rep("grupo-1",4), rep("grupo-2",2), rep("grupo-3",3))
subgrupo = paste("subgroup", c(1,2,3,4,1,2,1,2,3), sep = "-")
valor = c(13,5,22,12,11,7,3,1,23)
dados = data.frame(grupo, subgrupo, valor)
View(dados)

# Labels
?treemap
treemap(dados, 
        index = c("grupo", "subgrupo"),     
        vSize = "valor", 
        type = "index",
        fontsize.labels = c(15,12),               
        fontcolor.labels = c("white", "purple"),    
        fontface.labels = c(2,1),                 
        bg.labels = 220,             
        align.labels = list(c("center", "center"), c("right", "bottom")),                                  
        overlap.labels = 0.5,           
        inflate.labels = F)


# Customizando
treemap(dados, 
        index = c("grupo", "subgrupo"), 
        vSize = "valor", 
        type = "index",
        border.col = c("black", "white"),          
        border.lwds = c(7,2))

#Histograma

# Gerando valores para x
x <- mtcars$mpg 

# Criando o histograma
?hist
h <- hist(x, 
          breaks = 10, 
          col = "red", 
          xlab = "Milhas Por Galão", 
          main = "Histograma com Curva de Distribuição") 

# Customizando o histograma
xfit <- seq(min(x), max(x), length = 40) 
yfit <- dnorm(xfit, mean = mean(x), sd = sd(x)) 
yfit <- yfit*diff(h$mids[1:2])*length(x) 
lines(xfit, yfit, col = "blue", lwd = 2)

# Usando o ggplot2
library(ggplot2)

# dataset
dados = data.frame(value = rnorm(10000))
View(dados)

# Tamanho das colunas
ggplot(dados, aes(x=value)) + 
  geom_histogram(binwidth = 0.05)

# Cor uniforme
ggplot(dados, aes(x=value)) + 
  geom_histogram(binwidth = 0.2, color="white", fill=rgb(0.2,0.7,0.1,0.4) ) 

# Cor proporcional
ggplot(dados, aes(x=value)) + 
  geom_histogram(binwidth = 0.2, aes(fill = ..count..) )


